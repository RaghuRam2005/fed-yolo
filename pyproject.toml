[project]
name = "obj-yolo"
version = "2.0.0"
description = "federated learning environment for yolo model"
readme = "README.md"
requires-python = ">=3.12"

authors = [
    {name = "RaghuRam2005", email="atommail20@gmail.com"}
]

# Required dependencies ------------------------------------------------------------------------------------------------
dependencies = [
    "numpy>=1.23.0",
    "matplotlib>=3.3.0",
    "opencv-python>=4.6.0",
    "pillow>=7.1.2",
    "pyyaml>=5.3.1",
    "requests>=2.23.0",
    "scipy>=1.4.1",
    "torch>=1.8.0",
    "torch>=1.8.0,!=2.4.0; sys_platform == 'win32'", # Windows CPU errors w/ 2.4.0 https://github.com/ultralytics/ultralytics/issues/15049
    "torchvision>=0.9.0",
    "psutil", # system utilization
    "polars",
    "ultralytics-thop>=2.0.0", # FLOPs computation https://github.com/ultralytics/thop
    "flwr==1.19.0",
    "PyYAML>=6.0.2",
    "pathlib >=1.0.1",
    "pynvml >=12.0.0",
    "pytest>=8.4.2",
    "scikit-learn>=1.7.2",
]

# Optional dependencies ------------------------------------------------------------------------------------------------
[project.optional-dependencies]
dev = [
    "ipython",
    "pytest",
    "pytest-cov",
    "coverage[toml]",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.9",
    "mkdocstrings[python]",
    "mkdocs-ultralytics-plugin>=0.1.29", # for meta descriptions and images, dates and authors
    "mkdocs-macros-plugin>=1.0.5", # duplicating content (i.e. export tables) in multiple places
]
export = [
    "numpy<2.0.0", # TF 2.20 compatibility
    "onnx>=1.12.0; platform_system != 'Darwin'", # ONNX export
    "onnx>=1.12.0,<1.18.0; platform_system == 'Darwin'",  # TF inference hanging on MacOS
    "coremltools>=8.0; platform_system != 'Windows' and python_version <= '3.13'", # CoreML supported on macOS and Linux
    "scikit-learn>=1.3.2; platform_system != 'Windows' and python_version <= '3.13'", # CoreML k-means quantization
    "openvino>=2024.0.0",  # OpenVINO export
    "tensorflow>=2.0.0,<=2.19.0", # TF bug https://github.com/ultralytics/ultralytics/issues/5161
    "tensorflowjs>=2.0.0", # TF.js export, automatically installs tensorflow
    "tensorstore>=0.1.63; platform_machine == 'aarch64' and python_version >= '3.9'", # for TF Raspberry Pi exports
    "h5py!=3.11.0; platform_machine == 'aarch64'", # fix h5py build issues due to missing aarch64 wheels in 3.11 release
]
solutions = [
    "shapely>=2.0.0",    # shapely for point and polygon data matching
    "streamlit>=1.29.0",    # for live inference on web browser, i.e `yolo streamlit-predict`
    "flask>=3.0.1",  # for similarity search solution
]
logging = [
    "wandb", # https://docs.ultralytics.com/integrations/weights-biases/
    "tensorboard",  # https://docs.ultralytics.com/integrations/tensorboard/
    "mlflow",  # https://docs.ultralytics.com/integrations/mlflow/
]
extra = [
    "hub-sdk>=0.0.12", # Ultralytics HUB
    "ipython", # interactive notebook
    "albumentations>=1.4.6", # training augmentations
    "faster-coco-eval>=1.6.7", # COCO mAP
]
typing = [
    "scipy-stubs",
    "types-pillow",
    "types-psutil",
    "types-pyyaml",
    "types-requests",
    "types-shapely",
]

[project.urls]
"Homepage" = "https://ultralytics.com"
"Source" = "https://github.com/ultralytics/ultralytics"
"Documentation" = "https://docs.ultralytics.com"
"Bug Reports" = "https://github.com/ultralytics/ultralytics/issues"
"Changelog" = "https://github.com/ultralytics/ultralytics/releases"

[project.scripts]
yolo = "ultralytics.cfg:entrypoint"
ultralytics = "ultralytics.cfg:entrypoint"

[tool.setuptools]
packages = ["obj_yolo", "ultralytics"]
